<!--                                                                                  -->
<!--  $Id: classes_def.xml,v 1.10 2010/04/12 18:12:28  Exp $                          -->
<!--  $Author:  $                                                                     -->
<!--  $Date: 2010/04/12 18:12:28 $                                                    -->
<!--                                                                                  -->
<!--  Include art::Wrapper lines for objects that we would like to put into the event -->
<!--  Include the non-wrapper lines for all objects on the art::Wrapper lines and     -->
<!--  for all objects that are data members of those objects.                         -->

<lcgdict>

<!-- support classes (e.g., elements of data product classes) -->
 <class name="std::map<std::basic_string<char>,double > " />
 <class name="std::vector<std::map<std::basic_string<char>,double > >" />
 <class name="std::bitset<8>" />

<!-- Feature vectors, length 1-5                                        -->
 <class name="anab::FeatureVector<1>" ClassVersion="10"               >
  <version ClassVersion="10" checksum="510677247"/>
 </class>
 <class name="art::Wrapper< anab::FeatureVector<1> >"                 />
 <class name="std::vector< anab::FeatureVector<1> >"                  />
 <class name="art::Ptr< anab::FeatureVector<1> >"                     />
 <class name="art::Wrapper< std::vector< anab::FeatureVector<1> > >"  />

 <class name="anab::FeatureVector<2>" ClassVersion="10"               >
  <version ClassVersion="10" checksum="511208689"/>
 </class>
 <class name="art::Wrapper< anab::FeatureVector<2> >"                 />
 <class name="std::vector< anab::FeatureVector<2> >"                  />
 <class name="art::Ptr< anab::FeatureVector<2> >"                     />
 <class name="art::Wrapper< std::vector< anab::FeatureVector<2> > >"  />

 <class name="anab::FeatureVector<3>" ClassVersion="10"               >
  <version ClassVersion="10" checksum="511740131"/>
 </class>
 <class name="art::Wrapper< anab::FeatureVector<3> >"                 />
 <class name="std::vector< anab::FeatureVector<3> >"                  />
 <class name="art::Ptr< anab::FeatureVector<3> >"                     />
 <class name="art::Wrapper< std::vector< anab::FeatureVector<3> > >"  />

 <class name="anab::FeatureVector<4>" ClassVersion="10"               >
  <version ClassVersion="10" checksum="512271573"/>
 </class>
 <class name="art::Wrapper< anab::FeatureVector<4> >"                 />
 <class name="std::vector< anab::FeatureVector<4> >"                  />
 <class name="art::Ptr< anab::FeatureVector<4> >"                     />
 <class name="art::Wrapper< std::vector< anab::FeatureVector<4> > >"  />

 <class name="anab::FeatureVector<5>" ClassVersion="10"               >
  <version ClassVersion="10" checksum="512803015"/>
 </class>
 <class name="art::Wrapper< anab::FeatureVector<5> >"                 />
 <class name="std::vector< anab::FeatureVector<5> >"                  />
 <class name="art::Ptr< anab::FeatureVector<5> >"                     />
 <class name="art::Wrapper< std::vector< anab::FeatureVector<5> > >"  />

 <!-- MVA output metadata, length 1-5                                -->
 <class name="anab::MVADescription<1>" ClassVersion="10"              >
  <version ClassVersion="10" checksum="835494112"/>
 </class>
 <class name="art::Wrapper< anab::MVADescription<1> >"                />
 <class name="std::vector< anab::MVADescription<1> >"                 />
 <class name="art::Ptr< anab::MVADescription<1> >"                    />
 <class name="art::Wrapper< std::vector< anab::MVADescription<1> > >" />

 <class name="anab::MVADescription<2>" ClassVersion="10"              >
  <version ClassVersion="10" checksum="934009004"/>
 </class>
 <class name="art::Wrapper< anab::MVADescription<2> >"                />
 <class name="std::vector< anab::MVADescription<2> >"                 />
 <class name="art::Ptr< anab::MVADescription<2> >"                    />
 <class name="art::Wrapper< std::vector< anab::MVADescription<2> > >" />

 <class name="anab::MVADescription<3>" ClassVersion="10"              >
  <version ClassVersion="10" checksum="1032523896"/>
 </class>
 <class name="art::Wrapper< anab::MVADescription<3> >"                />
 <class name="std::vector< anab::MVADescription<3> >"                 />
 <class name="art::Ptr< anab::MVADescription<3> >"                    />
 <class name="art::Wrapper< std::vector< anab::MVADescription<3> > >" />

 <class name="anab::MVADescription<4>" ClassVersion="10"              >
  <version ClassVersion="10" checksum="1131038788"/>
 </class>
 <class name="art::Wrapper< anab::MVADescription<4> >"                />
 <class name="std::vector< anab::MVADescription<4> >"                 />
 <class name="art::Ptr< anab::MVADescription<4> >"                    />
 <class name="art::Wrapper< std::vector< anab::MVADescription<4> > >" />

 <class name="anab::MVADescription<5>" ClassVersion="10"              >
  <version ClassVersion="10" checksum="1229553680"/>
 </class>
 <class name="art::Wrapper< anab::MVADescription<5> >"                />
 <class name="std::vector< anab::MVADescription<5> >"                 />
 <class name="art::Ptr< anab::MVADescription<5> >"                    />
 <class name="art::Wrapper< std::vector< anab::MVADescription<5> > >" />

 <enum name="anab::kVariableType"/>
 <enum name="anab::kTrackDir"/>

 <class name="anab::Calorimetry"           ClassVersion="17"                           >
  <version ClassVersion="17" checksum="836686545"/>
  <version ClassVersion="16" checksum="2995599306"/>
  <version ClassVersion="15" checksum="2095251371"/>
  <version ClassVersion="14" checksum="1421274164"/>
  <version ClassVersion="13" checksum="2889632995"/>
  <version ClassVersion="12" checksum="1421274164"/>
  <version ClassVersion="11" checksum="495386863"/>
 </class>
 <class name="anab::ParticleID"            ClassVersion="15"                           >
  <version ClassVersion="15" checksum="1915672523"/>
  <version ClassVersion="14" checksum="2286758712"/>
  <version ClassVersion="13" checksum="3664244500"/>
  <version ClassVersion="12" checksum="1769449101"/>
 </class>
 <class name="anab::sParticleIDAlgScores"      ClassVersion="13"                 >
  <version ClassVersion="13" checksum="1047022744"/>
  <version ClassVersion="12" checksum="3455956857"/>
  <version ClassVersion="11" checksum="3455956848"/>
  <version ClassVersion="10" checksum="646537151"/>
 </class>
 <class name="anab::MVAPIDResult"/>
 <class name="anab::FlashMatch"            ClassVersion="13"                           >
  <version ClassVersion="13" checksum="4254447866"/>
  <version ClassVersion="12" checksum="2992884177"/>
 </class>
 <class name="anab::CosmicTag"            ClassVersion="3"                           >
  <version ClassVersion="3" checksum="1439180793"/>
  <version ClassVersion="2" checksum="1434160808"/>
  <version ClassVersion="-1" checksum="1434160808"/>
 </class>
 <class name="anab::T0"            ClassVersion="15"                           >
  <version ClassVersion="15" checksum="412722420"/>
  <version ClassVersion="14" checksum="1006800076"/>
  <version ClassVersion="13" checksum="1995943675"/>
  <version ClassVersion="12" checksum="1711426196"/>
  <version ClassVersion="11" checksum="2353091006"/>
 </class>
 <class name="anab::BackTrackerMatchingData"            ClassVersion="10"                    >
  <version ClassVersion="10" checksum="81935589"/>
 </class>
 <class name="anab::BackTrackerHitMatchingData"         ClassVersion="12"                    >
  <version ClassVersion="12" checksum="228403910"/>
  <version ClassVersion="11" checksum="534978548"/>
     <version ClassVersion="10" checksum="0"/>
 </class>
 <enum name="anab::cosmic_tag_id"                                                      />
 <class name="std::vector<anab::Calorimetry>"                                          />
 <class name="std::vector<anab::ParticleID>"                                           />
 <class name="std::vector<anab::sParticleIDAlgScores>"                                 />
 <class name="std::vector<anab::MVAPIDResult>"                                         />
 <class name="std::vector<anab::FlashMatch>"                                           />
 <class name="std::vector<anab::CosmicTag>"                                            />
 <class name="std::vector<anab::T0>"                                                   />
 <class name="std::vector<anab::BackTrackerMatchingData>"                              />
 <class name="std::vector<anab::BackTrackerHitMatchingData>"                           />
 <class name="art::Ptr<anab::Calorimetry>"                                   	       />
 <class name="art::Ptr<anab::ParticleID>"                                              />
 <class name="art::Ptr<anab::MVAPIDResult>"                                            />
 <class name="art::Ptr<anab::FlashMatch>"                                   	       />
 <class name="art::Ptr<anab::CosmicTag>"                                   	           />
 <class name="art::Ptr<anab::T0>"                                                      />
 <class name="art::Ptr<anab::BackTrackerMatchingData>"                                 />
 <class name="art::Ptr<anab::BackTrackerHitMatchingData>"                              />
 <class name="std::pair< art::Ptr<recob::Track>,      art::Ptr<anab::Calorimetry> >"   />
 <class name="std::pair< art::Ptr<anab::Calorimetry>, art::Ptr<recob::Track>      >"   />
 <class name="std::pair< art::Ptr<recob::Shower>,      art::Ptr<anab::Calorimetry> >"   />
 <class name="std::pair< art::Ptr<anab::Calorimetry>, art::Ptr<recob::Shower>      >"   />
 <class name="std::pair< art::Ptr<recob::Track>,      art::Ptr<anab::ParticleID> >"    />
 <class name="std::pair< art::Ptr<anab::ParticleID>, art::Ptr<recob::Track>      >"    />
 <class name="std::pair< art::Ptr<recob::Track>,     art::Ptr<anab::MVAPIDResult>   >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<anab::MVAPIDResult>   >" />
 <class name="std::pair< art::Ptr<anab::FlashMatch>, art::Ptr<recob::Track>      >"    />
 <class name="std::pair< art::Ptr<anab::FlashMatch>, art::Ptr<recob::OpFlash>      >"    />
 <class name="std::pair< art::Ptr<recob::OpFlash>, art::Ptr<anab::FlashMatch>      >"    />
 <class name="std::pair< art::Ptr<recob::Track>, art::Ptr<anab::FlashMatch>      >"    />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<anab::CosmicTag>  >"    />
 <class name="std::pair< art::Ptr<recob::Track>,      art::Ptr<anab::CosmicTag>  >"    />
 <class name="std::pair< art::Ptr<recob::PCAxis>,     art::Ptr<anab::CosmicTag>  >"    />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<anab::CosmicTag>  >"    />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<anab::CosmicTag>  >"    />
 <class name="std::pair< art::Ptr<anab::CosmicTag>, art::Ptr<recob::PFParticle>    >"    />
 <class name="std::pair< art::Ptr<anab::CosmicTag>, art::Ptr<recob::Track>    >"    />
 <class name="std::pair< art::Ptr<anab::CosmicTag>, art::Ptr<recob::PCAxis>    >"    />
 <class name="std::pair< art::Ptr<anab::CosmicTag>, art::Ptr<recob::Cluster>  >"    />
 <class name="std::pair< art::Ptr<anab::CosmicTag>, art::Ptr<recob::Hit>      >"    />
 <class name="std::pair< art::Ptr<anab::CosmicTag>,  art::Ptr<anab::FlashMatch> >"    />
 <class name="std::pair< art::Ptr<anab::FlashMatch>, art::Ptr<anab::CosmicTag>  >"    />
 <class name="std::pair< art::Ptr<recob::Cluster>,   art::Ptr<anab::FlashMatch> >"    />
 <class name="std::pair< art::Ptr<anab::FlashMatch>, art::Ptr<recob::Cluster>   >"    />
 <class name="std::pair< art::Ptr<recob::Track>, art::Ptr<simb::MCParticle> >"    />
 <class name="art::Assns<recob::Track,      anab::Calorimetry,  void>"	               />
 <class name="art::Assns<anab::Calorimetry, recob::Track,       void>"	               />
 <class name="art::Assns<recob::Shower,      anab::Calorimetry,  void>"	               />
 <class name="art::Assns<anab::Calorimetry, recob::Shower,       void>"	               />
 <class name="art::Assns<recob::Track,      anab::ParticleID,  void>"	               />
 <class name="art::Assns<anab::ParticleID, recob::Track,       void>"	               />
 <class name="art::Assns<recob::Track,       anab::MVAPIDResult,  void>"               />
 <class name="art::Assns<recob::Shower,       anab::MVAPIDResult,  void>"               />
 <class name="art::Assns<anab::MVAPIDResult, recob::Track,        void>"               />
 <class name="art::Assns<anab::MVAPIDResult, recob::Shower,        void>"               />
 <class name="art::Assns<anab::FlashMatch, recob::Track,       void>"	               />
 <class name="art::Assns<anab::FlashMatch, recob::OpFlash,       void>"	               />
 <class name="art::Assns<recob::Track,     anab::FlashMatch,   void>"	               />
 <class name="art::Assns<recob::OpFlash,     anab::FlashMatch,   void>"	               />
 <class name="art::Assns<recob::PFParticle, anab::CosmicTag,   void>"	               />
 <class name="art::Assns<recob::Track,      anab::CosmicTag,   void>"	               />
 <class name="art::Assns<recob::PCAxis,     anab::CosmicTag,   void>"	               />
 <class name="art::Assns<recob::Cluster,    anab::CosmicTag,   void>"	               />
 <class name="art::Assns<recob::Hit,        anab::CosmicTag,   void>"	               />
 <class name="art::Assns<anab::CosmicTag,   recob::PFParticle, void>"	               />
 <class name="art::Assns<anab::CosmicTag,   recob::Track,      void>"	               />
 <class name="art::Assns<anab::CosmicTag,   recob::PCAxis,     void>"	               />
 <class name="art::Assns<anab::CosmicTag,   recob::Cluster,    void>"	               />
 <class name="art::Assns<anab::CosmicTag,   anab::FlashMatch,  void>"	               />
 <class name="art::Assns<anab::CosmicTag,   recob::Hit,        void>"	               />
 <class name="art::Assns<anab::FlashMatch,  anab::CosmicTag,   void>"	               />
 <class name="art::Assns<anab::FlashMatch,  recob::Cluster,    void>"	               />
 <class name="art::Assns<recob::Cluster,    anab::FlashMatch,  void>"	               />
 <class name="art::Assns<anab::T0,          recob::Track,      void>"                  />
 <class name="art::Assns<anab::T0,          recob::Shower,     void>"                  />
 <class name="art::Assns<anab::T0,          recob::PFParticle, void>"                  />
 <class name="art::Assns<anab::T0,          raw::ExternalTrigger, void>"               />
 <class name="art::Assns<anab::T0,          recob::OpFlash,    void>"                  />
 <class name="art::Assns<recob::Track,      anab::T0,          void>"                  />
 <class name="art::Assns<recob::Shower,     anab::T0,          void>"                  />
 <class name="art::Assns<recob::PFParticle, anab::T0,          void>"                  />
 <class name="art::Assns<raw::ExternalTrigger, anab::T0,       void>"                  />
 <class name="art::Assns<recob::OpFlash,    anab::T0,          void>"                  />
 <class name="art::Assns< simb::MCParticle,   recob::Hit,      void > "                />
 <class name="art::Assns< simb::MCParticle,   recob::Hit,      anab::BackTrackerHitMatchingData > "  />
 <class name="art::Assns< recob::Hit,         simb::MCParticle,  void > "                />
 <class name="art::Assns< recob::Hit,         simb::MCParticle,  anab::BackTrackerHitMatchingData > "  />
 <class name="art::Assns< simb::MCParticle,   recob::Track,    void > "                />
 <class name="art::Assns< simb::MCParticle,   recob::Track,    anab::BackTrackerMatchingData > "  />
 <class name="art::Assns< recob::Track,     simb::MCParticle,  void > "                />
 <class name="art::Assns< recob::Track,     simb::MCParticle,  anab::BackTrackerMatchingData > "  />
 <class name="art::Assns< simb::MCParticle,   recob::Shower,    void > "                />
 <class name="art::Assns< simb::MCParticle,   recob::Shower,    anab::BackTrackerMatchingData > "  />
 <class name="art::Assns< recob::Shower,     simb::MCParticle,  void > "                />
 <class name="art::Assns< recob::Shower,     simb::MCParticle,  anab::BackTrackerMatchingData > "  />
 <class name="art::Assns< simb::MCParticle,   recob::PFParticle,    void > "                />
 <class name="art::Assns< simb::MCParticle,   recob::PFParticle,    anab::BackTrackerMatchingData > "  />
 <class name="art::Assns< recob::PFParticle,     simb::MCParticle,  void > "                />
 <class name="art::Assns< recob::PFParticle,     simb::MCParticle,  anab::BackTrackerMatchingData > "  />
 <class name="art::Wrapper< std::vector<anab::Calorimetry>      	>"	       />
 <class name="art::Wrapper<art::Assns<recob::Track,      anab::Calorimetry,  void> >"  />
 <class name="art::Wrapper<art::Assns<anab::Calorimetry, recob::Track,       void> >"  />
 <class name="art::Wrapper<art::Assns<recob::Shower,      anab::Calorimetry,  void> >"  />
 <class name="art::Wrapper<art::Assns<anab::Calorimetry, recob::Shower,       void> >"  />
 <class name="art::Wrapper< std::vector<anab::ParticleID>      	>"	               />
 <class name="art::Wrapper<art::Assns<recob::Track,      anab::ParticleID,  void> >"   />
 <class name="art::Wrapper<art::Assns<anab::ParticleID,  recob::Track,       void> >"   />
 <class name="art::Wrapper< std::vector<anab::MVAPIDResult> >"                          />
 <class name="art::Wrapper< art::Assns<recob::Track,     anab::MVAPIDResult,   void> >"   />
 <class name="art::Wrapper< art::Assns<recob::Shower,     anab::MVAPIDResult,   void> >"   />
 <class name="art::Wrapper< art::Assns<anab::MVAPIDResult,  recob::Track,     void> >"    />
 <class name="art::Wrapper< art::Assns<anab::MVAPIDResult,  recob::Shower,     void> >"    />
 <class name="art::Wrapper< std::vector<anab::FlashMatch>       	>"	       />
 <class name="art::Wrapper<art::Assns<anab::FlashMatch, recob::OpFlash,  void> >"  />
 <class name="art::Wrapper<art::Assns<anab::FlashMatch,  recob::Track,       void> >"  />
 <class name="art::Wrapper<art::Assns<recob::Track, anab::FlashMatch,  void> >"  />
 <class name="art::Wrapper<art::Assns<recob::OpFlash,  anab::FlashMatch,       void> >"  />
 <class name="art::Wrapper< std::vector<anab::CosmicTag>       	>"	       />
 <class name="art::Wrapper<art::Assns<anab::CosmicTag,  recob::PFParticle,  void> >"  />
 <class name="art::Wrapper<art::Assns<anab::CosmicTag,  recob::Track,       void> >"  />
 <class name="art::Wrapper<art::Assns<anab::CosmicTag,  recob::PCAxis,      void> >"  />
 <class name="art::Wrapper<art::Assns<anab::CosmicTag,  recob::Cluster,     void> >"  />
 <class name="art::Wrapper<art::Assns<anab::CosmicTag,  recob::Hit,         void> >"  />
 <class name="art::Wrapper<art::Assns<recob::Hit,  anab::CosmicTag,         void> >"  />
 <class name="art::Wrapper<art::Assns<recob::PFParticle, anab::CosmicTag,     void> >"  />
 <class name="art::Wrapper<art::Assns<recob::Track,   anab::CosmicTag,     void> >"  />
 <class name="art::Wrapper<art::Assns<recob::PCAxis,  anab::CosmicTag,     void> >"  />
 <class name="art::Wrapper<art::Assns<recob::Cluster, anab::CosmicTag,     void> >"  />
 <class name="art::Wrapper<art::Assns<anab::FlashMatch, anab::CosmicTag,     void> >"  />
 <class name="art::Wrapper<art::Assns<anab::CosmicTag,  anab::FlashMatch,    void> >"  />
 <class name="art::Wrapper<art::Assns<anab::FlashMatch, recob::Cluster,      void> >"  />
 <class name="art::Wrapper<art::Assns<recob::Cluster,   anab::FlashMatch,    void> >"  />
 <class name="art::Wrapper<std::vector<anab::T0>              >"              />
 <class name="art::Wrapper< art::Assns<anab::T0,          recob::Track,      void> >"  />
 <class name="art::Wrapper< art::Assns<recob::Track,      anab::T0,          void> >"  />
 <class name="art::Wrapper< art::Assns<anab::T0,          recob::Shower,     void> >"  />
 <class name="art::Wrapper< art::Assns<recob::Shower,     anab::T0,          void> >"  />
 <class name="art::Wrapper< art::Assns<anab::T0,          recob::PFParticle, void> >"  />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, anab::T0,          void> >"  />
 <class name="art::Wrapper< art::Assns<anab::T0,          raw::ExternalTrigger, void> >" />
 <class name="art::Wrapper< art::Assns<raw::ExternalTrigger, anab::T0,       void> >"  />
 <class name="art::Wrapper< art::Assns<anab::T0,          recob::OpFlash,    void> >"  />
 <class name="art::Wrapper< art::Assns<recob::OpFlash,    anab::T0,          void> >"  />
 <class name="art::Wrapper< art::Assns< simb::MCParticle, recob::Hit,        void > >"  />
 <class name="art::Wrapper< art::Assns< simb::MCParticle, recob::Hit,        anab::BackTrackerHitMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< recob::Hit,       simb::MCParticle,  void > >"  />
 <class name="art::Wrapper< art::Assns< recob::Hit,       simb::MCParticle,  anab::BackTrackerHitMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< simb::MCParticle, recob::Track,      void > >"  />
 <class name="art::Wrapper< art::Assns< simb::MCParticle, recob::Track,      anab::BackTrackerMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< recob::Track,     simb::MCParticle,  anab::BackTrackerMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< simb::MCParticle, recob::Shower,      anab::BackTrackerMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< recob::Shower,     simb::MCParticle,  anab::BackTrackerMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< simb::MCParticle, recob::PFParticle,      anab::BackTrackerMatchingData > >"  />
 <class name="art::Wrapper< art::Assns< recob::PFParticle,     simb::MCParticle,  anab::BackTrackerMatchingData > >"  />

  <ioread
    version="[-16]"
    sourceClass="anab::Calorimetry"
    source="std::vector<TVector3> fXYZ"
    targetClass="anab::Calorimetry"
    target="fXYZ"
    include="TVector3.h;Math/GenVector/CoordinateSystemTags.h;Math/GenVector/Cartesian3D.h;Math/GenVector/PositionVector3D.h">
    <![CDATA[
      fXYZ.clear();
      for (auto const& p: onfile.fXYZ)
        fXYZ.emplace_back(p.X(), p.Y(), p.Z());
    ]]>
  </ioread>
 
<!--  <ioread
     version="[-13]"
     sourceClass="anab::ParticleID"
     source="geo::PlaneID fPlaneID; int fNdf; double fMinChi2; double fDeltaChi2; double fChi2Proton; double fChi2Kaon; double fChi2Pion; double fChi2Muon; double fMissingE; double fMissingEavg; double fPIDA"
     targetClass="anab::ParticleID"
     target="fParticleIDAlgScores"
     include="lardataobj/AnalysisBase/ParticleID_VariableTypeEnums.h,larcoreobj/SimpleTypesAndConstants/geo_types.h">
     <![CDATA[
              std::cout << "[classes_def] Reading an old version of anab::ParticleID. Constructing new class" << std::endl;

//std::cout << "oldObj: " << *(oldObj->fObject) << std::endl;

//std::cout << "fPlaneID = " << oldObj->fPlaneID << std::endl;
/*std::cout << "fNdf = " << oldObj->fNdf << std::endl;
std::cout << "fMinChi2 = " << oldObj->fMinChi2 << std::endl;
std::cout << "fDeltaChi2 = " << oldObj->fDeltaChi2 << std::endl;
std::cout << "fChi2Proton = " << oldObj->fChi2Proton << std::endl;
std::cout << "fChi2Kaon = " << oldObj->fChi2Kaon << std::endl;
std::cout << "fChi2Pion = " << oldObj->fChi2Pion << std::endl;
std::cout << "fChi2Muon = " << oldObj->fChi2Muon << std::endl;
std::cout << "fMissingE = " << oldObj->fMissingE << std::endl;
std::cout << "fMissingEavg = " << oldObj->fMissingEavg << std::endl;
std::cout << "fPIDA = " << oldObj->fPIDA << std::endl;*/


        // create object to store new PID objects
        std::vector<anab::sParticleIDAlgScores> AlgScoresVec;

        std::bitset<8> bs;
	if (onfile.fPlaneID.isValid){
	std::cout << "onfile.fPlaneID.isValid = " << onfile.fPlaneID.isValid << std::endl;
	//std::cout << "Onfile.fPlaneID.Plane = " << onfile.fPlaneID.Plane << " , onfile.fPlaneID.deepestIndex() = " << onfile.fPlaneID.deepestIndex() << ", setting bit " << onfile.fPlaneID.deepestIndex()-onfile.fPlaneID.Plane << std::endl;
        bs.set(onfile.fPlaneID.deepestIndex()-onfile.fPlaneID.Plane);
	}

        // and individual algScores
        anab::sParticleIDAlgScores chi2_proton;
        chi2_proton.fAlgName = "Chi2";
        chi2_proton.fVariableType = anab::kGOF;
        chi2_proton.fAssumedPdg = 2212;
        chi2_proton.fTrackDir = anab::kForward;
        chi2_proton.fValue = onfile.fChi2Proton;
        chi2_proton.fNdf = onfile.fNdf;
        chi2_proton.fPlaneMask = bs;

        anab::sParticleIDAlgScores chi2_muon;
        chi2_muon.fAlgName = "Chi2";
        chi2_muon.fVariableType = anab::kGOF;
        chi2_muon.fAssumedPdg = 13;
        chi2_muon.fTrackDir = anab::kForward;
        chi2_muon.fValue = onfile.fChi2Muon;
        chi2_muon.fNdf = onfile.fNdf;
        chi2_muon.fPlaneMask = bs;

        anab::sParticleIDAlgScores chi2_pion;
        chi2_pion.fAlgName = "Chi2";
        chi2_pion.fVariableType = anab::kGOF;
        chi2_pion.fAssumedPdg = 211;
        chi2_pion.fTrackDir = anab::kForward;
        chi2_pion.fValue = onfile.fChi2Pion;
        chi2_pion.fNdf = onfile.fNdf;
        chi2_pion.fPlaneMask = bs;

        anab::sParticleIDAlgScores chi2_kaon;
        chi2_kaon.fAlgName = "Chi2";
        chi2_kaon.fVariableType = anab::kGOF;
        chi2_kaon.fAssumedPdg = 211;
        chi2_kaon.fTrackDir = anab::kForward;
        chi2_kaon.fValue = onfile.fChi2Pion;
        chi2_kaon.fNdf = onfile.fNdf;
        chi2_kaon.fPlaneMask = bs;

        anab::sParticleIDAlgScores pida;
        pida.fAlgName = "PIDA";
        pida.fVariableType = anab::kPIDA;
        pida.fAssumedPdg = 321;
        pida.fTrackDir = anab::kForward;
        pida.fValue = onfile.fPIDA;
        pida.fNdf = onfile.fNdf;
        pida.fPlaneMask = bs;

        anab::sParticleIDAlgScores deltachi2;
        deltachi2.fAlgName = "DeltaChi2";
        deltachi2.fValue = onfile.fDeltaChi2;
        deltachi2.fPlaneMask = bs;

        anab::sParticleIDAlgScores minchi2;
        minchi2.fAlgName = "MinChi2";
        minchi2.fValue = onfile.fMinChi2;
        minchi2.fPlaneMask = bs;

        anab::sParticleIDAlgScores missinge;
        missinge.fAlgName = "MissingE";
        missinge.fValue = onfile.fMissingE;
        missinge.fPlaneMask = bs;

        anab::sParticleIDAlgScores avgmissinge;
        avgmissinge.fAlgName = "MissingEavg";
        avgmissinge.fValue = onfile.fMissingEavg;
        avgmissinge.fPlaneMask = bs;

        AlgScoresVec.push_back(chi2_proton);
        AlgScoresVec.push_back(chi2_muon);
        AlgScoresVec.push_back(chi2_pion);
        AlgScoresVec.push_back(chi2_kaon);
        AlgScoresVec.push_back(pida);
	AlgScoresVec.push_back(deltachi2);
	AlgScoresVec.push_back(minchi2);
	AlgScoresVec.push_back(missinge);
	AlgScoresVec.push_back(avgmissinge);

        fParticleIDAlgScores = AlgScoresVec;
     ]]>
 </ioread> -->

</lcgdict>
